name: before prod Update major version tag on new release
on: 
  release:
    types: [published]

jobs:
  update_major_version_tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Parse version
        id: parse_version
        run: |
          set -e
          release_tag="${GITHUB_REF_NAME}"
          if [[ "$release_tag" =~ ^v([[:digit:]]+)\.([[:digit:]]+)\.([[:digit:]]+)-?([[:alnum:]]+)?$ ]]; then
            echo current_major_version=${BASH_REMATCH[1]} | tee --append $GITHUB_OUTPUT
            echo minor=${BASH_REMATCH[2]}
            echo build=${BASH_REMATCH[3]}
            echo pre=${BASH_REMATCH[4]} | tee --append $GITHUB_OUTPUT
          else
            echo "Error: version does not match pattern. please make sure that a release version follows the format 'v*.*.*', optionally followed by a pre release note. "
            exit 1
          fi
      - name: Update major version
        if: steps.parse_version.outputs.pre == ''
        run: |
          set -e
          # echo "current_major_version: ${{ steps.parse_version.outputs.current_major_version }}"
          # echo $v_major_version
          git push origin :refs/tags/$v_major_version
          git tag $v_major_version $GITHUB_SHA
          git push origin $v_major_version
          echo "Attached tag $v_major_version to commit $GITHUB_SHA."
        env:
          v_major_version: v${{ steps.parse_version.outputs.current_major_version }}
      - name: Pre. No update
        if: steps.parse_version.outputs.pre != ''
        run:
          echo "This is a pre release, no need to update the major version. "

